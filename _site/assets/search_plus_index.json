{"/others/about/": {
    "title": "About",
    "keywords": "About-me",
    "url": "/others/about/",
    "body": "CV: https://researchmap.jp/ryo.niwa"
  },"/pages/how_I_build_this_website/": {
    "title": "How I built this website",
    "keywords": "Website",
    "url": "/pages/how_I_build_this_website/",
    "body": "This website is powered by jekyll-gitbook. I simply forked the repository from the github and pasted them into my own repo. I use docker-ed jekyll for local procedures,. Here is my typicall command for a quick check after updating markdown. docker run --rm \\ --volume=\"$PWD:/srv/jekyll:Z\" \\ --publish 127.0.0.1:4000:4000 \\ -it jekyll/jekyll:4.2.0 \\ sh -c \"bundle install &amp;&amp; jekyll serve\" I used remote theme function supported on Github pages. See details from the link. jekyll-gitbook is open sourced under the Apache License, Version 2.0, using the same license as the original GitBook repository."
  },"/rna-seq/2024-08-26-normalization.html": {
    "title": "20240826 Normalization",
    "keywords": "RNA-Seq",
    "url": "/rna-seq/2024-08-26-normalization.html",
    "body": "Aim for this page Understand methods of normalization in RNA-Seq Quick answer of this page: Use TPM first Before discussing this topic, this QA is must-read! RPKM and FPKM are virtually the same concept. RPKM is basically for single-end sequencing and FPKM is for pair-end sequencing. With paired-end RNA-seq, two reads can correspond to a single fragment, or, if one read in the pair did not map, one read can correspond to a single fragment. The only difference between RPKM and FPKM is that FPKM takes into account that two reads can map to one fragment (and so it doesn’t count this fragment twice). For RPKM (Reads Per Kilobase Million): \\[\\text{RPKM} = \\frac{\\text{Number of reads mapped to a gene}}{\\text{Total reads in sample} \\times 10^{-6}} \\times \\frac{10^3}{\\text{Length of gene in bp}}\\] For FPKM (Fragments Per Kilobase Million): \\[\\text{FPKM} = \\frac{\\text{Number of fragments mapped to a gene}}{\\text{Total fragments in sample} \\times 10^{-6}} \\times \\frac{10^3}{\\text{Length of gene in bp}}\\] For TPM, there are two steps: Calculate RPK (Reads Per Kilobase): \\[\\text{RPK} = \\frac{\\text{Number of reads mapped to a gene}}{\\text{Length of gene in kb}}\\] Calculate TPM (Transcripts Per Kilobase Million): \\[\\text{TPM} = \\frac{\\text{RPK for a gene} \\times 10^6}{\\text{Sum of all RPK values in the sample}}\\] when calculating TPM, the only difference is that you normalize for gene length first, and then normalize for sequencing depth second. However, the effects of this difference are quite profound. When you use TPM, the sum of all TPMs in each sample are the same. This makes it easier to compare the proportion of reads that mapped to a gene in each sample. In contrast, with RPKM and FPKM, the sum of the normalized reads in each sample may be different, and this makes it harder to compare samples directly. Examples and details Let’s try some examples from this blog. Example table: length 1000 bp 1200 bp 800 bp 500 bp 2000 bp sample A (count) 20 30 20 50 150 sample B (count) 100 60 140 120 180 Results (computed by claude): Transcript Length 1000 bp 1200 bp 800 bp 500 bp 2000 bp Total Sample A (Read Count) 20 30 20 50 150 270 FPKM (A) 74,074 92,593 92,593 370,370 277,778 907,408 TPM (A) 81,633 102,041 102,041 408,163 306,122 1,000,000 Sample B (Read Count) 100 60 140 120 180 600 FPKM (B) 166,667 83,333 291,667 400,000 150,000 1,091,667 TPM (B) 152,672 76,336 267,176 366,412 137,404 1,000,000 Why are the differences in total of FPKM and TPM occured? Wagner, G.P., Kin, K. &amp; Lynch, V.J. Measurement of mRNA abundance using RNA-seq data: RPKM measure is inconsistent among samples. Theory Biosci. 131, 281–285 (2012). https://doi.org/10.1007/s12064-012-0162-3 The reason for the inconsistency of RPKM across samples arises from the normalization by the total number of reads. While rmc as well as qPCR results are ratios of transcript concentrations, the RPKM normalizes a proxy for transcript number by \\[\\frac{r_g \\cdot 10^3}{l_g \\cdot \\frac{R}{10^6}}\\] the number of sequencing reads in millions, \\[\\frac{R}{10^6}\\] The latter, however, is not a measure of total transcript number. The relationship between \\(R\\) and the total number of transcripts sampled depends on the size distribution of RNA transcripts, which can differ between samples. In a sample with, on average, longer transcripts the same number of reads represents fewer transcripts. While TPM is essentially the ratio of each gene’s RPK to the total RPK, RPKM (FPKM) can be considered as the ratio of each gene’s RPK to the total number of reads. When longer genes have more reads, the overall RPK effectively becomes smaller, resulting in a discrepancy in the total values."
  },"/rna-seq/2024-08-23-databases.html": {
    "title": "20240825 Databases",
    "keywords": "RNA-Seq",
    "url": "/rna-seq/2024-08-23-databases.html",
    "body": "Aim for this page Know what kind of databases in expression analysis are available Quick answer of this page: Raw=SRA, Processed=GEO I want you to recoginie two important databases, SRA and GEO. Typical differences of the 2 databases: Aspect SRA (Sequence Read Archive) GEO (Gene Expression Omnibus) Purpose Raw sequence data repository Functional genomics data repository Data type Raw sequencing data (fastq, bam) Processed data, metadata, and raw data links Scope All sequencing platforms and applications Primarily gene expression data, but includes other functional genomics data Data size Typically larger files (raw data) Usually smaller files (processed data) Search capability Sequence-based searches Expression and metadata-based searches SRA description: https://www.ncbi.nlm.nih.gov/sra/docs/ GEO description: https://www.ncbi.nlm.nih.gov/geo/info/overview.html Databases are linked to each other GSE275240 is our lab’s previous paper’s data accession ID. This GSE275240 is connected to another database called BioProject under PRJDB15620. BioProject contains SRA Run as sequence data and BioSample to explain what each sequence data is derived from. Certainly. SRA ‘Experiment’ describes the sequencing library derived from a specific sample and the sequencing method used. Much of the publicly available information about the data is recorded in the Experiment. SRA ‘Run’ is an object that groups together data files that should be linked to an Experiment. It contains little descriptive information about the data itself. All data files listed in a Run are merged into an SRA file for archiving (and into fastq files for distribution). Database structure This is an overall structure of SRA/BioSample/BioProject. The picture below is cited from DDBJ. Since it does not contain GEO, I just added in a mermaid plot. BioProject is a database designed to organize research projects and their associated data. By citing the BioProject accession number, data can be grouped on a project-by-project basis. BioSample and GEO Sample (GSM) ultimately explains the identical information. graph TD subgraph BioProject[\"BioProject\"] BP[BioProject PRJD] end subgraph BioSample[\"BioSample\"] BS1[BioSample SAMD] BS2[BioSample SAMD] BS3[BioSample SAMD] end subgraph SRA[\"Sequence Read Archive\"] E[Experiment SRX-DRX] E --&gt; LL[\"Library layout\"] E --&gt; SP[\"Sequencing platform\"] R1[Run SRR-DRR] R2[Run SRR-DRR] R3[Run SRR-DRR] SDF[\"Sequence data files fastq, BAM\"] R1 -.-&gt; SDF R2 -.-&gt; SDF R3 -.-&gt; SDF end subgraph GEO[\"Gene Expression Omnibus\"] GSE[GEO Series GSE] GSM1[GEO Sample GSM] GSM2[GEO Sample GSM] GSM3[GEO Sample GSM] GSE --&gt; GSM1 GSE --&gt; GSM2 GSE --&gt; GSM3 GSM3 --&gt; GD[\"Gene expression data\"] end BP --&gt; BS1 BP --&gt; BS2 BP --&gt; BS3 BP --&gt; E BP --&gt; GSE GSM1 -.-&gt; R1 GSM2 -.-&gt; R2 GSM3 -.-&gt; R3 BS1 --&gt; E BS2 --&gt; E BS3 --&gt; E E --&gt; R1 E --&gt; R2 E --&gt; R3 classDef bioproject fill:#e6ffe6,stroke:#333,stroke-width:2px; classDef biosample fill:#fff0e6,stroke:#333,stroke-width:2px; classDef sra fill:#e6e6ff,stroke:#333,stroke-width:2px; classDef geo fill:#ffe6e6,stroke:#333,stroke-width:2px; class BP,PD,G,Pub bioproject; class BS1,BS2,BS3,SD biosample; class E,LL,SP,R1,R2,R3,DF,SDF sra; class GSE,GSM1,GSM2,GSM3,GD geo; style BioProject fill:#e6ffe6,stroke:#333,stroke-width:4px; style BioSample fill:#fff0e6,stroke:#333,stroke-width:4px; style SRA fill:#e6e6ff,stroke:#333,stroke-width:4px; style GEO fill:#ffe6e6,stroke:#333,stroke-width:4px; DRA/SRA differences? DRA (DDBJ Sequence Read Archive) is an archive of raw read sequences and maintained by DDBJ. DRA (DDBJ Sequence Read Archive) is a member of the International Nucleotide Sequence Database Collaboration (INSDC) and is operated in international cooperation with NCBI SRA and EBI Sequence Read Archive (ERA). The data is mirrored (synchronized). If you can find the same dataset in SRA and DRA, downloading from DRA is geographically much faster."
  },"/rna-seq/2024-08-23-count.html": {
    "title": "20240823 count data from NCBI",
    "keywords": "RNA-Seq",
    "url": "/rna-seq/2024-08-23-count.html",
    "body": "Aim for this page Know NCBI’s service: auto-generated RNA-seq count data Quick answer of this page: Use NCBI generates RNA-seq count data You are very fortunate. NCBI launched a new service to make the count matrix of RNA-Seq available! Count data generation occurs under the following conditions: 1. The sample is registered in the Sequence Read Archive (SRA) 2. The sample is registered in the Gene Expression Omnibus (GEO) 3. The sample is derived from either human or mouse A count matrix is automatically generated approximately one week after sample registration. For each GEO Series, two main types of files are generated, raw counts and normalized counts. RNA-seq Raw Count Matrix: Aspect Description Format Tab-delimited text file Purpose Suitable for input into differential expression analysis tools like DESeq2, edgeR, or limma voom Structure - First column: Gene IDs (matching the Human gene annotation table)- Remaining columns: Raw counts for each GEO Sample RNA-seq Normalized Count Matrix: Aspect Description Format Tab-delimited text file Purpose Suitable for qualitative analysis and visualization of gene expression abundance Structure - First column: Gene IDs (matching the Human gene annotation table)- Remaining columns: Normalized counts for each GEO Sample Normalization FPKM (RPKM) and TPM How does the analysis work? NCBI uses HISAT2 and featureCounts. Details are here. Briefly, SRA runs where the organism is Homo sapiens and type is Transcriptomic are aligned to genome assembly GCA_000001405.15 using HISAT2. Runs that pass a 50% alignment rate are further processed with Subread featureCounts which outputs a raw count file for each run. For Human data, the Homo sapiens Annotation Release 109.20190905 was used for gene annotation. GEO further processes these SRR raw count files into GEO Series raw counts matrices. Data derived from single cell samples are skipped. In cases where there is more than one SRA run per GEO Sample, the raw counts are summed. Values in the raw count matrices are rounded so that they are compatible input for common differential expression analysis software. Using the raw counts as input, GEO then computes FPKM(RPKM) and TPM normalized values. This way of the output is Atarimae (natural) in RNA-Seq field Please note that our in-house RNA-Seq pipeline provides the same format of results. You need to handle these data by yourself for data exploration anyway."
  }}
