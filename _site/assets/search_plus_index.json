{"/others/how_I_build_this_website/": {
    "title": "How I built this website",
    "keywords": "Website",
    "url": "/others/how_I_build_this_website/",
    "body": "This website is powered by jekyll-gitbook. I simply forked the repository from the github and pasted them into my own repo. I use docker-ed jekyll for local procedures,. Here is my typicall command for a quick check after updating markdown. docker run --rm \\ --volume=\"$PWD:/srv/jekyll:Z\" \\ --publish 127.0.0.1:4000:4000 \\ -it jekyll/jekyll:4.2.0 \\ sh -c \"bundle install &amp;&amp; jekyll serve\" I used remote theme function supported on Github pages. See details from the link. jekyll-gitbook is open sourced under the Apache License, Version 2.0, using the same license as the original GitBook repository."
  },"/pages/1-docker/": {
    "title": "1-Docker make you life easier",
    "keywords": "Packages",
    "url": "/pages/1-docker/",
    "body": "Ref: https://www.docker.com/ Aim for this page Understand how to use docker Quick answer of this page: No quick answer to this post. Take a training! Core RNA-Seq tools like DESeq2 and edgeR are implemented in R. As a result, many RNA-Seq web applications are primarily implemented in R as well. When creating web applications in R, developers often use a package called Shiny. However, one of the issues with these tools is that they can be somewhat slow in operation. To address this, instead of accessing a web server to use RNA-Seq web applications, this post introduces a method to run these web applications on a local computer via Docker. Docker Docker is a powerful platform designed to streamline the process of developing, shipping, and running applications by encapsulating them in lightweight, portable containers. These containers are essentially standalone, executable packages that include everything needed to run the application: code, runtime, system tools, libraries, and settings. Docker utilizes containerization technology to create isolated environments that can run consistently across various computing infrastructures, from a developer’s local machine to test environments and production servers. This isolation ensures that the application works uniformly regardless of the host environment, effectively addressing the common “it works on my machine” problem. Long story in short, if I make a docker image on my computer and share it with you, you can copy identical environment what I have in your computer. Docker Desktop Docker Desktop is a software application designed to manage Docker containers through a user-friendly graphical interface. It provides an accessible way for developers and researchers to interact with Docker, especially on personal computers. By default, when Docker Desktop is launched, it reserves 2 CPU cores and 8GB of RAM exclusively for Docker operations. This ensures that Docker containers have dedicated resources to run efficiently. Download and try the app from here: https://www.docker.com/products/docker-desktop/ Then copy and paste this command: docker run -d -p 80:80 docker/getting-started After executing the command, docker automatically downloads required image. Go to localhost:80. Now you copied an environment from docker labs and can see a website running locally (which means you are browsing the files in your computer). You can disconnect your WiFi and see whether the website lasts if you do not trust me. Many websites use docker as a base and put the container on servers like AWS. That’s how website and web applications work. Docker Hub To execute the same process for RNA-Seq web application, docker images need to be uploaded somewhere or you have to make them by your own. Making docker images on your own takes a bit of studies and I do not introduce the methods in this post. Instead you can focus on tools that developers made images open. The somewhere developers upload their image is called docker hub (https://hub.docker.com/). Let’s try iDEP, one of the most conventional RNA-Seq analysis webtools. docker run --pull always -d --name idep -p 3838:3838 gexijin/idep:latest Note that the Docker engine is now running in the backgroup, acting as a webserver. It works even if you restart your computer. To stop it, run these from Windows PowerShell: This also works for macOS terminal. docker stop idep docker rm idep As a repeat, docker steals your computer resource automatically. You have to shut the containers or app down. You can press Quit Docker Desktop without typing commands to stop docker. Error occured? Below is a typical error beginners encounter. This is because Docker system does not wake up on your computer. Click your app icon and wake it up! docker run -d -p 80:80 docker/getting-started docker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?. See 'docker run --help'."
  },"/pages/2-tips/": {
    "title": "2-Public data analysis tips",
    "keywords": "Tips",
    "url": "/pages/2-tips/",
    "body": "Performing Public data Analysis Using NCBI GEO 1. Data Collection Utilizing Public Databases: Retrieve data from GEO (Gene Expression Omnibus) Setting Dataset Selection Criteria: Determine conditions (e.g., tissue type, disease state, technical variables) based on research objectives. Generally, it’s better to unify comparable factors. As RNA-Seq data tends to be variable, try to standardize aspects like species or cell lines when possible. Leveraging AI Tools: Tools like ResearchRabbit and ConnectedPapers are extremely useful for literature discovery and connecting related studies. 2. Data Preprocessing Verifying TSV Files: Check TSV files downloaded from GEO and extract necessary metadata. As of 2023, human RNA-Seq data submitted to GEO is standardized and analyzed by NCBI using consistent methods. Count data is typically uploaded within a week of registration. References: https://www.ncbi.nlm.nih.gov/geo/info/rnaseqcounts.html https://academic.oup.com/nar/article/52/D1/D138/7337616 Note: For SRA execution data of human (Homo sapiens) transcriptomics, HISAT2 is used for alignment to the genome assembly GCA_000001405.15. Execution data achieving over 50% alignment rate is further processed with Subread’s featureCounts to generate raw count files for each run. Values in the raw count matrix are rounded to serve as suitable input for common differential expression analysis software. GEO calculates FPKM (RPKM) and TPM normalized values using the raw counts as input. 3. Dataset Integration Using R or Similar Tools: Combine datasets using R or other programming tools. Excel can also be used for simpler integrations. While correcting for batch effects in RNA-Seq data is sometimes necessary, it’s often not required for drawing general conclusions. Basic Quality Control: Use tools like Degust or iDEP to get an overview and ensure the analyzed samples are credible. These tools can also be used to examine DEGs (Differentially Expressed Genes) if needed. GEO2R is another option for basic data inspection. Generally, as long as the overall count values don’t deviate significantly, the data should be usable. Reference: https://togotv.dbcls.jp/en/20230328.html 4. Data Analysis Normalization: Apply appropriate normalization methods (e.g., TPM, FPKM) to account for differences in sequencing depth and gene length when you compare the value quickly. Batch Effect Correction: If necessary, use methods like ComBat or RUVSeq to correct for batch effects between different studies (But you have to start from fastq then). Differential Expression Analysis: Employ tools like DESeq2, edgeR to identify differentially expressed genes across conditions or studies. Use the raw counts. You may set certain threshold in case of the meta-analysis to define DEGs here (mostly a simple mathematics). Or you can use stats to combine the p-value with a package like metaRNASeq (https://pubmed.ncbi.nlm.nih.gov/24678608/). 5. Functional Analysis Gene Ontology Enrichment: Perform GO enrichment analysis to identify overrepresented biological processes, molecular functions, or cellular components. Pathway Analysis: Use tools like KEGG or Reactome to identify significantly enriched pathways. Gene Set Enrichment Analysis (GSEA): Conduct GSEA to identify sets of genes that show statistically significant differences between biological states. 6. Visualization and Interpretation Heatmaps: Create heatmaps to visualize expression patterns across samples and genes. Principal Component Analysis (PCA): Use PCA to visualize overall similarities and differences between samples. Network Analysis: Construct gene co-expression networks to identify modules of genes with similar expression patterns."
  },"/pages/3-TCC-GUI/": {
    "title": "3-TCC-GUI",
    "keywords": "Packages",
    "url": "/pages/3-TCC-GUI/",
    "body": "Description Ref: TCC-GUI GitHub Ref: TCC-GUI: a Shiny-based application for differential expression analysis of RNA-Seq count data TCC-GUI is implemented in R and encapsulated in Shiny application. It contains all the major functionalities of TCC, including DE pipelines with robust normalization and simulation data generation under various conditions. It also contains (i) tools for exploratory analysis, including a useful score termed average silhouette that measures the degree of separation of compared groups, (ii) visualization tools such as volcano plot and heatmap with hierarchical clustering, and (iii) a reporting tool using R Markdown. Docker commands MacOS; Intel chip user https://github.com/geedrn/TCC-GUI-Docker docker run \\ --rm -e DISABLE_AUTH=true \\ -p 8787:8787 \\ geedrn/tcc MacOS; Apple Silicon user # https://github.com/geedrn/TCC-GUI-Docker_Apple docker run \\ --rm -e DISABLE_AUTH=true \\ -p 8787:8787 \\ sayaka0710/tcc Tutorial A step-by-step tutorial is available in the GitHub repository: TCC-GUI Tutorial Pros User-friendly graphical interface Implements the robust TCC method for differential expression analysis Provides various normalization methods (TMM, TbT, DEGES) Includes both MA-plot and Volcano plot visualizations Offers flexible sample grouping options Supports multi-group comparisons Easy to use Provides downloadable analysis reports (They generate a lab note for you) Cons More focused on differential expression analysis, with less emphasis on downstream pathway analysis compared to some other tools May have limitations for very large datasets, depending on the user’s computational resources No updates anymore"
  },"/pages/4-RNASeqChef/": {
    "title": "4-RNASeqChef",
    "keywords": "Packages",
    "url": "/pages/4-RNASeqChef/",
    "body": "Description Ref: Github Ref: A web-based integrative transcriptome analysis, RNAseqChef, uncovers the cell/tissue type-dependent action of sulforaphane RNAseqChef, RNA-seq data controller highlighting gene expression features, a web-based platform of systematic transcriptome analysis which can automatically detect, integrate, and visualize the differentially expressed genes and their biological function without bioinformatics skills. Furthermore, Users can analyze not only a single dataset but also integrate and evaluate multiple datasets. Docker commands docker run --rm -p 3838:3838 omicschef/rnaseqchef:latest JPN demo: YouTube Pros Ongoing maintenance Great visualization in pair-wise or 3 conditions DEG Actions are light Can manage promoter motif analysis TogoTV is available in Japanese Cons Difficulty in multi DEGs Less citations (Because the tool is new) Only Japanese movie manual available (Their wiki has sufficient info for English speakers)"
  },"/pages/5-iDEP/": {
    "title": "5-iDEP",
    "keywords": "Packages",
    "url": "/pages/5-iDEP/",
    "body": "Description Ref: iDEP website Ref: iDEP: an integrated web application for differential expression and pathway analysis of RNA-Seq data. iDEP (integrated Differential Expression and Pathway analysis) seamlessly connects 63 R/Bioconductor packages, 2 web services, and comprehensive annotation and pathway databases for 220 plant and animal species. The workflow can be reproduced by downloading customized R code and related pathway files. Docker commands # https://github.com/gexijin/idepGolem # go to localhost:3838 once you run the command below docker run --pull always -d --name idep -p 3838:3838 gexijin/idep:latest Tutorial A comprehensive tutorial is available on YouTube: iDEP installation tutorial iDEP analysis tutorial Pros Comprehensive analysis pipeline from data pre-processing to pathway analysis Supports various types of gene IDs and multiple species Integrates multiple R/Bioconductor packages for robust analysis Provides interactive visualizations Regular updates and maintenance Cited more than 1000 times Has a sister tools called shinyGO Cons A bit heavy and difficult to execute on my computer (16GB memory) May have limitations for extremely large-scale meta-analyses Since they have so many functions, learning takes a bit of time"
  }}
